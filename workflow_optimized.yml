# ============================================================
# WORKFLOW OTIMIZADO COM PARALELIZAÇÃO
# Este workflow agrupa as execuções em fases lógicas,
# executando em paralelo tudo que pode ser paralelo
# ============================================================
main:
    steps:
    # FASE 1: Extração de dados brutos (tudo em paralelo - independente)
    # Tempo estimado: tempo da função mais lenta (ao invés da soma de todas)
    - phase1_data_extraction:
        parallel:
          branches:
            # NBA data sources
            - nba_active_players:
                steps:
                  - call: http.get
                    args:
                      url: https://nba-active-players-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - nba_game_player_stats:
                steps:
                  - call: http.get
                    args:
                      url: https://nba-game-player-stats-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - nba_games:
                steps:
                  - call: http.get
                    args:
                      url: https://nba-games-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - nba_season_advanced:
                steps:
                  - call: http.get
                    args:
                      url: https://nba-season-averages-general-advanced-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - nba_season_base:
                steps:
                  - call: http.get
                    args:
                      url: https://nba-season-averages-general-base-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - nba_standings:
                steps:
                  - call: http.get
                    args:
                      url: https://nba-team-standings-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            # Odds data sources
            - odds_event_odds:
                steps:
                  - call: http.get
                    args:
                      url: https://odds-event-odds-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - odds_events:
                steps:
                  - call: http.get
                    args:
                      url: https://odds-events-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - odds_extract_event_ids:
                steps:
                  - call: http.get
                    args:
                      url: https://odds-extract-event-ids-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            # Injury report data
            - injury_report_extractor:
                steps:
                  - call: http.get
                    args:
                      url: https://injury-report-extractor-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
    
    # FASE 2: De-para (depende da Fase 1 - precisa dos dados extraídos)
    - phase2_depara:
        parallel:
          branches:
            - depara_injury:
                steps:
                  - call: http.get
                    args:
                      url: https://depara-nba-injury-players-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
            - depara_odds:
                steps:
                  - call: http.get
                    args:
                      url: https://depara-nba-odds-players-yiaf5ytl5q-ue.a.run.app
                      auth:
                        type: OIDC
    
    # FASE 3: DBT Staging (depende da Fase 2 - precisa dos dados normalizados)
    - phase3_dbt_staging:
        call: googleapis.run.v2.projects.locations.jobs.run
        args:
          name: projects/sigma-heuristic-469419-h3/locations/us-east1/jobs/dbt-staging
    
    # FASE 4: DBT Marts e PDF processor em paralelo (dependem da Fase 3)
    - phase4_final_processing:
        parallel:
          branches:
            - dbt_marts:
                steps:
                  - call: googleapis.run.v2.projects.locations.jobs.run
                    args:
                      name: projects/sigma-heuristic-469419-h3/locations/us-east1/jobs/dbt-intermediate-marts
            - pdf_processor:
                steps:
                  - call: googleapis.run.v2.projects.locations.jobs.run
                    args:
                      name: projects/sigma-heuristic-469419-h3/locations/us-east1/jobs/pdf-processor

